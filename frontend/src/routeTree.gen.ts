/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const HallLazyImport = createFileRoute('/hall')()
const IndexLazyImport = createFileRoute('/')()
const FilmIndexLazyImport = createFileRoute('/film/')()
const FilmTitleLazyImport = createFileRoute('/film/$title')()

// Create/Update Routes

const HallLazyRoute = HallLazyImport.update({
  path: '/hall',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/hall.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const FilmIndexLazyRoute = FilmIndexLazyImport.update({
  path: '/film/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/film.index.lazy').then((d) => d.Route))

const FilmTitleLazyRoute = FilmTitleLazyImport.update({
  path: '/film/$title',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/film.$title.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/hall': {
      preLoaderRoute: typeof HallLazyImport
      parentRoute: typeof rootRoute
    }
    '/film/$title': {
      preLoaderRoute: typeof FilmTitleLazyImport
      parentRoute: typeof rootRoute
    }
    '/film/': {
      preLoaderRoute: typeof FilmIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  HallLazyRoute,
  FilmTitleLazyRoute,
  FilmIndexLazyRoute,
])

/* prettier-ignore-end */
